<div id="app" class="wln" v-loading.fullscreen.lock="fullLoading"><router-view></router-view></div>
<style>.el-textarea__inner{padding:0px;}</style>
<template id="app-list">
    <div>
        <div class="wln-title">
            <div style="float:right">
                <el-button size="mini" type="info" :plain="true" onclick="history.back()">返回</el-button>
                <el-button size="mini" type="primary" icon="el-icon-plus" @@click="router.push(_vpath + '/add?question=' + _question)" v-if="editer">新增选项</el-button>
            </div>
            @Html.Raw(ViewBag.Name)
        </div>
        <el-table :data="rows" :empty-text="message">
            <el-table-column width="70" align="center" label="选项" property="flag"></el-table-column>
            <el-table-column width="120"></el-table-column>
            <el-table-column label="名称" property="title"></el-table-column>
            <el-table-column width="120" align="center" label="输入项">
                <template scope="scope">
                    <font v-if="scope.row.isinput > 0">是</font>
                </template>
            </el-table-column>
            <el-table-column width="160" align="right" v-if="editer">
                <template scope="scope">
                    <el-button size="mini" icon="el-icon-edit" @@click="handleEditer(scope.row)" type="primary">编辑</el-button>
                    <el-button size="mini" icon="el-icon-delete" @@click="handleDelete(scope.row)" type="warning">删除</el-button>
                </template>
            </el-table-column>
        </el-table>
    </div>
</template>
<template id="app-form">
    <div>
        <div class="wln-title">选项设置</div>
        <el-form ref="form" v-model="form" label-width="80px">
            <el-form-item label="选项">
                <el-input v-model="form.flag" placeholder="必填" style="width:80px"></el-input>
                &nbsp;输入项
                <el-radio-group v-model="form.isinput">
                    <el-radio :label="1">是</el-radio>
                    <el-radio :label="0">否</el-radio>
                </el-radio-group>
            </el-form-item>
            <el-form-item label="名称">
                <el-input v-model="form.title" placeholder="必填" style="width:480px"></el-input>
            </el-form-item>
            <el-form-item>
                <el-button type="primary" @@click="onSubmit">提交</el-button>
                <el-button onclick="history.back()">返回</el-button>
            </el-form-item>
        </el-form>
    </div>
</template>
<script type="text/javascript">
    var _vpath = '/questionoption';
    var _question = '@ViewBag.question'
    emptyPager.editer = false;
    emptyPager.fullLoading = false;
    emptyPager.filter_category = -1;

    var appList = Vue.extend({
        template: '#app-list',
        data: function () {
            return emptyPager
        },
        methods: {
            refresh() {
                emptyPager.fullLoading = true;
                $.getJSON(location.pathname, { 'do': 'pager', question: _question }, function (rlt) {
                    emptyPager.message = rlt.message;
                    emptyPager.rows = rlt.rows;
                    emptyPager.fullLoading = false;
                });
            },
            handleEditer(row) {
                router.push(_vpath + '/edit?question=' + _question + '&id=' + row.id)
            },
            handleDelete(row) {
                this.$confirm('此操作将删除该记录, 是否继续?', '提示', {
                    confirmButtonText: '确定',
                    cancelButtonText: '取消',
                    type: 'warning'
                }).then(() => {
                    var _self = this;
                    $.getJSON(location.pathname, { 'do': 'del', id: row.id }, function (rlt) {
                        _self.refresh();
                        iTips(rlt.message, rlt.success);
                    });
                }).catch(() => {
                    iTips('删除操作已取消');
                });
            }
        }, created() {
            _self = this;
            _self.refresh();
            $.getJSON('/auth', { code: 'School_Questionary_Editor' }, function (rlt) {
                emptyPager.editer = rlt.success;
            })
        }
    })
    var appForm = Vue.extend({
        template: '#app-form',
        data: function () {
            return {
                form: {
                    id: ''
                    ,
                    flag: ''
                    ,
                    title: ''
                    ,
                    isinput: 0
                    ,
                    question: _question
                }
            };
        }
        , methods: {
            onSubmit: function () {
                var obj = this.form;
                $.post(location.pathname + '?do=set', obj, function (rlt) {
                    app.$message({ type: rlt.success ? 'success' : 'error', message: rlt.message });
                    if (rlt.success) {
                        history.back();
                    }
                });
            }
        }, created() {
            var obj = this.form;
            obj.id = this.getParam('id');
            if (obj.id) {
                $.getJSON(location.pathname, { 'do': 'get', id: obj.id }, function (rlt) {
                    if (rlt.id) {
                        obj.flag = rlt.flag;
                        obj.title = rlt.title;
                        obj.isinput = rlt.isinput;
                        emptyPager.fullLoading = false;
                    }
                });
            }
        }
    })
    var router = new VueRouter({
        mode: 'history', routes: [
            { path: _vpath, component: appList }
            , { path: _vpath + '/add', component: appForm }
            , { path: _vpath + '/edit', component: appForm }
        ]
    });
    var app = new Vue({ el: '#app', router: router, data: emptyPager });
</script>